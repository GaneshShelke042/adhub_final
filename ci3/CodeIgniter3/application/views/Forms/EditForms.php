<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sample Form</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Custom CSS for adjusting input width */
        .form-row {
            width: 100%;
        }

        #name-input {
            width: 125%;
        }

        #status-select {
            margin-left: 30%;
            width: 70%;
        }

        #description-textarea {
            width: 100%;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

        input:checked+.slider {
            background-color: #2196F3;
        }

        input:focus+.slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked+.slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        .slider.round {
            border-radius: 34px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        .home-section {
            margin-top: 2%;
        }

        .box-container {
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
            background-color: #ffffff;
            padding: 20px;
            border-radius: 20px;
        }

        .main-content {
            margin: 0;
            width: 100%;
            margin: 20px auto;
            margin-top: 0px;
            background-color: #efefef;
            overflow: hidden;
            padding: 40px 30px 30px 30px;
            margin-bottom: 2px;
        }

        /* li {
            margin: 15px;
        } */
        .options-list li {
            margin: 15px;
        }
    </style>
</head>

<body>
    <section class="home-section">
        <div class="main-content">
            <div class="box-container">
                <div class="container">
                    <form method="POST" id="sample-form">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="OfferDetails">Name</label>
                                <input id="name-input" type="text" name="name" class="form-control" value="<?php echo $olddata[0]["name"] ?>" readonly>

                            </div>
                            <div class="form-group col-md-6">
                                <label id="status-select" for="status">Status</label>
                                <select id="status-select" class="form-control" id="status" name="status">
                                    <option value="1">Active</option>
                                    <option value="0">Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label for="description">Description</label>
                                <textarea id="description-textarea" name="description" class="form-control" rows="3"><?php echo htmlspecialchars($olddata[0]["description"], ENT_QUOTES); ?></textarea>
                            </div>
                        </div>





                        <?php
                        // Assuming $result is an array of roles generated by PHP
                        $options = '<option value="">Select</option>';
                        if (!empty($result)) {
                            foreach ($result as $roles) {
                                $options .= '<option value="' . $roles['Role_name'] . '">' . $roles['Role_name'] . '</option>';
                            }
                        }
                        ?>

                        <input type="hidden" id="require-value" name="require[]" value="0">

                        <div class="form-group d-flex justify-content-center">
                            <button type="submit" class="btn btn-primary mr-2">Submit</button>
                            <a href="<?php echo base_url() . 'index.php/FormsContro/viewForms' ?>">
                                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button></a>
                            <button type="button" class="btn btn-secondary ml-2" onclick="addNewField()">Add New Field</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        var increasee = 0;




        function addNewField() {
            var form = document.getElementById('sample-form');

            var newField = document.createElement('div');
            newField.classList.add('form-row');
            newField.innerHTML = `
             <div class="container" data-bs="data-${increasee}" style="border: 1px solid #ccc; box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1); padding: 30px; margin-bottom:5%">
            <div class="form-row">
            <input type="text" class="form-control id" name="iddd[]" value ="" hidden>
                <div class="form-group col-md-6">
                    <label>Question</label>
                    <input type="text" class="form-control question" name="question[]" placeholder="Enter your question">
                    
                </div>
                <div class="form-group col-md-4">
                    <label id="status-select" for="type">Type</label>
                    <select id="status-select" class="form-control type" id="type" name="type[]" onchange="handleTypeChange(this)">
                        <option value="Select">Select</option>
                        <option value="text">Text Box</option>
                        <option value="number">Number</option>
                        <option value="email">E-Mail</option>
                        <option value="password">Password</option>
                        <option value="textarea">Text Area</option>
                        <option value="date">Date</option>
                        <option value="time">Time</option>
                        <option value="datetime-local">Date-Time</option>
                        <option value="url">url</option>
                        <option value="file">File</option>
                        <option value="datalist">Data List</option>
                        <option value="radio">Radio Button</option>
                        <option value="checkbox">Check Box</option>
                        <option value="select">Single Dropdown</option>
                        <option value="multiselect">Multiple Dropdown</option>
                    </select>
                </div>
                <div class="input-field col-md-2" style="width: 10%; padding-left: 25px;">
                    <label>Require</label>
                    <label class="switch">
                        <input id="require-checkbox-${increasee}" type="checkbox" name="required[]" onchange="updateRequiredValues()" class="slide">
                        <span class="slider round"></span>
                    </label>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label>Description</label>
                    <input type="text" class="form-control Description" name="dis[]" placeholder="Enter your Description">
            
                </div>
                 
      
                
                <div class="form-group col-md-3">
                    <label>Pattern</label>
                    <input type="text" class="form-control Pattern" name="pattern[]" placeholder="Enter your Pattern">
                </div>
                <div class="form-group col-md-3">
                    <label>Pattern Message</label>
                    <input type="text" class="form-control Pattern_message" name="ptrn_msg[]" placeholder="Enter your Pattern Message">
                </div>
                <div class="form-group col-md-3">
                    <label id="status-select" for="cols">Cols</label>
                    <select id="status-select" class="form-control colm" name="cols[]">
                        <option value="Select">Select</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                        <option value="10">10</option>
                        <option value="11">11</option>
                        <option value="12">12</option>
                    </select>
                </div>
                <div class="form-group col-md-12">
                    <label for="permissions">Permissions</label>
                    <select class="form-control Permissions" name="permissions[]">
                        <?php echo $options; ?>
                    </select>
                </div>
            </div>

            <div class="form-group col-md-12">
            
            <label>Options</label>
            <input type="text" class="form-control " placeholder="Enter an option">
            <button type="button" class="btn btn-primary mt-2" onclick="addOption(this)">Add Option</button>
            <ul class="options-list mt-2"></ul>
            <input type="hidden" class="opt" name="options[]" value="">

            </div>

            <div class="form-row options-container"></div>
            <div class="form-group col-md-12">
                <button type="button" class="btn btn-danger" onclick="removeField(this)">Remove Field</button>
            </div>
             </div>
            `;
            form.insertBefore(newField, form.lastElementChild);
            increasee++;
        }

        function removeField(button) {
            var formGroup = button.parentElement.parentElement.parentElement;
            formGroup.remove();
        }

        // function updateRequiredValues() {
        //     var requiredValues = [];
        //     var checkboxes = document.querySelectorAll('.slide');
        //     checkboxes.forEach((checkbox) => {
        //         requiredValues.push(checkbox.checked ? 1 : 0);
        //     });
        //     document.getElementById("require-value").value = JSON.stringify(requiredValues);
        // }

        function updateRequiredValues() {
            var requiredValues = [];
            var checkboxes = document.querySelectorAll('.slide');
            checkboxes.forEach((checkbox) => {
                requiredValues.push(checkbox.checked ? 1 : 0);
            });

            // Convert the array to a serialized string format for PHP
            document.getElementById("require-value").value = JSON.stringify(requiredValues);
        }


        function addOption(button) {
            var inputElement = button.previousElementSibling;
            var optionValue = inputElement.value.trim();
            if (optionValue) {
                var optionsContainer = button.parentElement.querySelector('.options-list');
                var newOption = document.createElement('li');
                newOption.innerHTML = ` ${optionValue} <button type="button" class="btn btn-danger btn-sm ml-2" onclick="removeOption(this)">Remove</button>`;
                optionsContainer.appendChild(newOption);

                // Find the hidden input within the same form-group
                var hiddenInput = button.parentElement.querySelector('input[type="hidden"]');
                var optionsArray = JSON.parse(hiddenInput.value || '[]');
                optionsArray.push(optionValue);

                // Reindex the array starting from 0
                hiddenInput.value = JSON.stringify(optionsArray);

                inputElement.value = '';
            }
        }



        function removeOption(button) {
            var optionItem = button.parentElement;
            var optionsList = optionItem.parentElement;
            var hiddenInput = optionsList.nextElementSibling;
            var optionsArray = JSON.parse(hiddenInput.value || '[]');
            var optionValue = optionItem.firstChild.textContent.trim();

            // Remove the option from the array
            optionsArray = optionsArray.filter(option => option !== optionValue);

            // Reindex the array starting from 0
            hiddenInput.value = JSON.stringify(optionsArray);

            // Remove the option item from the list
            optionsList.removeChild(optionItem);
        }

        $(document).ready(function() {
            // Your jQuery code to interact with the DOM goes here
            // $("#myElement").text("Hello from jQuery!");
            console.log("hello ready");
            var s = <?php echo  json_encode($olddata) ?>;
            console.log(s.length);
            // console.log(JSON.stringify(s));
            console.log(s);
            //   s.length time call addNewField method 
            for (let i = 0; i < s.length; i++) {
                addNewField();
            }

            let i = 0;
            s.forEach(element => {

                let con = document.querySelector(`[data-bs="data-${i}"]`) // for testing is it take right container each time this variable not needed more 
                let question = document.querySelector(`[data-bs="data-${i}"] .question`);
                let type = document.querySelector(`[data-bs="data-${i}"] .type`);
                let Description = document.querySelector(`[data-bs="data-${i}"] .Description`);
                let Pattern = document.querySelector(`[data-bs="data-${i}"] .Pattern`);
                let Pattern_message = document.querySelector(`[data-bs="data-${i}"] .Pattern_message`);
                let Colm = document.querySelector(`[data-bs="data-${i}"] .Colm`);
                let Permissions = document.querySelector(`[data-bs="data-${i}"] .Permissions`);
                let opt = document.querySelector(`[data-bs="data-${i}"] .opt`);
                let options_list = document.querySelector(`[data-bs="data-${i}"] .options-list`);
                let id = document.querySelector(`[data-bs="data-${i}"] .id`);
                let required = document.querySelector(`[data-bs="data-${i}"] .slide `);

                console.log(id);
                id.value = element.id;
                console.log(id);
                question.value = element.question;
                Description.value = element.dis;
                Pattern.value = element.pattern;
                Pattern_message.value = element.ptrn_msg;
                for (let option of type.options) {
                    if (option.value === element.type) {
                        option.selected = true;
                        break; // Exit the loop after finding a match
                    }
                }



                for (let option of Colm.options) {
                    if (option.value === element.cols) {
                        option.selected = true;
                        break; // Exit the loop after finding a match
                    }
                }

                for (let option of Permissions.options) {
                    if (option.value === element.permissions) {
                        option.selected = true;
                        break; // Exit the loop after finding a match
                    }
                }


                console.log("required");
                console.log(element.required);
                if (element.required == '1') 
                {
                    required.click();
                }








                if (element.options) {
                    console.log(element.options);
                    let val = JSON.parse(element.options);
                    val.forEach(e => {
                        console.log(e);
                        opt.value = element.options;
                    })
                    console.log("option below");
                    console.log(opt.value);
                    let temp = JSON.parse(opt.value)

                    console.log(typeof opt.value);
                    console.log(temp); //['Yes', 'No'] array contain
                    console.log(typeof temp);
                    temp.forEach(e => {
                        // console.log(e);
                        let li = document.createElement('li');
                        let button = document.createElement('button');
                        button.classList.add('btn', 'btn-danger', 'btn-sm', 'ml-2');
                        button.onclick = function() {
                            removeOption(button);
                        };
                        button.innerText = "Remove";
                        li.innerHTML = e;
                        li.appendChild(button);
                        options_list.appendChild(li);
                    })
                }

                i++;
            });

            // populateOptionsFromData();
        });

        document.getElementById('sample-form').addEventListener('submit', function(event) {
            updateRequiredValues();

            // Convert the serialized string back to an array format for PHP
            var requireValue = document.getElementById("require-value").value;
            document.getElementById("require-value").value = requireValue.replace(/[\[\]]/g, '').split(',');
        });
    </script>
</body>

</html>